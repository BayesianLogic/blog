/**
 * Adaptive background mixture models
 * This BLOG program describe the model for image background 
 * segmentation. 
 * See the paper: 
 *   Image segmentation in video sequences: A probabilistic approach
 *   Nir Friedman, Stuart Russell, UAI 1997
 * and the paper:
 *   Adaptive background mixture models for real-time tracking
 *   Chris Stauffer, W.E.L Grimson, CVPR 1999
 * In particular, each pixel is drawn from a mixture of components. 
 * Each component is modeled as a Gaussian distribution. 
 *
 * Note the model is not exactly the same as those described in the 
 * above papers.
 * This version assumes a Poisson prior for the number of components.
 *
 * author: leili, rbharath:w
 */

type Component;

#Component ~ UniformInt(1, 15);

random Real[] Weight ~ Dirichlet(#Component, 0.2);

fixed Real[][] variance = [10000, 0, 0;
      	       		   0, 10000, 0;
			   0, 0, 10000];

// the prior posts uniform distribution over a box of 3D space.
random Real[] Mean(Component c, Timestep t) {
	// UniformVector(x_lower, x_upper, y_lower, y_upper, z_lower, z_upper)
    if (t == @1) then ~ UniformVector(0, 255, 0, 255, 0, 255)
	// MultivarGaussian(dimension, mean, covariance)
    else ~ MultivarGaussian(Mean(c, Prev(t)), variance)
};

random Component AssociatedComponent(Integer x, Integer y, Timestep t)
    ~ Categorical(Weight);

// the parameters can be set in Mean(Component)
random Real[] Intensity(Integer x, Integer y, Timestep t) 
    ~ MultivarGaussian(Mean(AssociatedComponent(x, y, t), t), variance);

obs Intensity(1, 1, @1) = [135; 85; 170];

query AssociatedComponent(1, 1, @1);
