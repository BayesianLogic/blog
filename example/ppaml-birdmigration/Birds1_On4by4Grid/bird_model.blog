// initial value for the birds 
fixed RealMatrix initial_value = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; 
// number of birds at location loc and timestep t 
random Integer birds(Location loc, Timestep t){ 
if t==@0 then = toInt(initial_value[loc_to_int(loc)]) 
    else if t==@20 then = toInt(initial_value[loc_to_int(loc)]) 
    else if t==@40 then = toInt(initial_value[loc_to_int(loc)]) 
    else if t==@60 then = toInt(initial_value[loc_to_int(loc)]) 
    else if t==@80 then = toInt(initial_value[loc_to_int(loc)]) 
    else if t==@100 then = toInt(initial_value[loc_to_int(loc)]) 
    else if t==@120 then = toInt(initial_value[loc_to_int(loc)]) 
    else = toInt(sum({ inflow(src, loc, Prev(t)) for Location src })) 
}; 
// the vector of outflow from source(src) to all other locations 
random RealMatrix outflow_vector(Location src,Timestep t) ~ Multinomial(birds(src,t), probs(src,t)) ; 
// inflow from source(src) to destination(dst) 
random Integer inflow(Location src, Location dst, Timestep t) = toInt(outflow_vector(src,t)[loc_to_int(dst)]); 
// Noisy Observations defined through Poisson distribution 
random Integer NoisyObs(Location loc, Timestep t){
	if birds(loc,t) == 0 ~ Poisson(0.1);
   else ~ Poisson(birds(loc,t))
};
