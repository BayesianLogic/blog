type Scene;
type Road;
type Grass;
type Person;
type Car;
type Cow;

// SCENE
random Integer Scenetype(Scene s) ~ UniformInt(1, 2);
fixed Integer Xmin = 1;
fixed Integer Ymin = 1;
fixed Integer Zmin = 1;
fixed Integer Xmax = 20; 
fixed Integer Ymax = 20; 
fixed Integer Zmax = 20;


// ROAD
origin Scene WhichScene(Road);
#Road(WhichScene = s) {
    if (s != null & Scenetype(s) == 1) then
        = 1
    else
        = 0
};
random Integer Height(Road r) ~ UniformInt(3, 5);

// GRASS
origin Scene WhichScene(Grass);
#Grass(WhichScene = s) {
    if (s != null & Scenetype(s) == 2) then
        = 1
    else
        = 0
};
random Integer Height(Grass g) ~ UniformInt(3, 5);

// CAR
origin Scene WhichScene(Car);
origin Road OnRoad(Car);
#Car(WhichScene = s, OnRoad = r) {
    if (s != null & r != null & Scenetype(s) == 1) then
        = 1
    else
        = 0
};

random Integer Xsize(Car c) ~ UniformInt(6, 9);
random Integer X0(Car c) ~ UniformInt(Xmin, Xmax);
random Integer X1(Car c) = X0(c) + Xsize(c);

random Integer Ysize(Car c) ~ UniformInt(2, 4);
random Integer Y0(Car c) = Height(OnRoad(c));
random Integer Y1(Car c) = Y0(c) + Ysize(c);

random Integer Z0(Car c) ~ UniformInt(Zmin, Zmax);

// COW
origin Scene WhichScene(Cow);
origin Grass OnGrass(Cow);
#Cow(WhichScene = s, OnGrass = g) {
    if (s != null & Scenetype(s) == 2 & g != null) then
        = 1
    else
        = 0
};

random Integer Xsize(Cow c) ~ UniformInt(5, 8);
random Integer X0(Cow c) ~ UniformInt(Xmin, Xmax);
random Integer X1(Cow c) = X0(c) + Xsize(c);

random Integer Ysize(Cow c) ~ UniformInt(2, 4);
random Integer Y0(Cow c) = Height(OnGrass(c));
random Integer Y1(Cow c) = Y0(c) + Ysize(c);

random Integer Z0(Cow c) ~ UniformInt(Zmin, Zmax);


// PERSON
origin Scene WhichScene(Person);
origin Road OnRoad(Person);
origin Grass OnGrass(Person);
#Person(WhichScene = s, OnRoad = r) {
    if (s != null & Scenetype(s) == 1 & r != null) then
        = 1
    else
        = 0
};
#Person(WhichScene = s, OnGrass = g) {
    if (s != null & Scenetype(s) == 2 & g != null) then
        = 1
    else
        = 0
};

random Integer Xsize(Person p) ~ UniformInt(1, 3);
random Integer X0(Person p) ~ UniformInt(Xmin, Xmax);
random Integer X1(Person p) = X0(p) + Xsize(p);

random Integer Ysize(Person p) ~ UniformInt(2, 3);
random Integer Y0(Person p) {
    if (Scenetype(WhichScene(p)) == 1) then
        = Height(OnRoad(p))
    else
        = Height(OnGrass(p))
};
random Integer Y1(Person p) = Y0(p) + Ysize(p);

random Integer Z0(Person p) ~ UniformInt(Zmin, Zmax);


// NO OVERLAPS IN 3D FOR THE SCENE
random Boolean NoOverlap_person2()
    = (forall Person p1
          (forall Person p2 ((p2 != p1) =>  
	      ( (X1(p1) < X0(p2)) | (X0(p1) > X1(p2)) | (Y1(p1) < Y0(p2)) | (Y0(p1) > Y1(p2)) | (Z0(p1) != Z0(p2)) )
	  ))
      );

random Boolean NoOverlap_car2()
    = (forall Car c1
          (forall Car c2 ((c2 != c1) =>  
	      ( (X1(c1) < X0(c2)) | (X0(c1) > X1(c2)) | (Y1(c1) < Y0(c2)) | (Y0(c1) > Y1(c2)) | (Z0(c1) != Z0(c2)) )
	  ))
      );

random Boolean NoOverlap_cow2()
    = (forall Cow c1
          (forall Cow c2 ((c2 != c1) =>
	      ( (X1(c1) < X0(c2)) | (X0(c1) > X1(c2)) | (Y1(c1) < Y0(c2)) | (Y0(c1) > Y1(c2)) | (Z0(c1) != Z0(c2)) )
	  ))
      );

random Boolean NoOverlap_person_car()
    = (forall Person p1
          (forall Car c2
	      ( (X1(p1) < X0(c2)) | (X0(p1) > X1(c2)) | (Y1(p1) < Y0(c2)) | (Y0(p1) > Y1(c2)) | (Z0(p1) != Z0(c2)) )
	  )
      );

random Boolean NoOverlap_person_cow()
    = (forall Person p1
          (forall Cow c2
	      ( (X1(p1) < X0(c2)) | (X0(p1) > X1(c2)) | (Y1(p1) < Y0(c2)) | (Y0(p1) > Y1(c2)) | (Z0(p1) != Z0(c2)) )
	  )
      );

random Boolean NoOverlap() = (NoOverlap_person2() & NoOverlap_car2() & NoOverlap_cow2() & NoOverlap_person_car() & NoOverlap_person_cow());


// COLOR OF VOXELS IN 3D
random Integer Color3D(Integer X, Integer Y, Integer Z) {
    if (X < Xmin | X > Xmax | Y < Ymin | Y > Ymax | Z < Zmin | Z > Zmax) then
        = 0
    else if (exists Car o ( ((Z == Z0(o)) & (X >= X0(o)) & (X <= X1(o)) & (Y >= Y0(o)) & (Y <= Y1(o))) )) then
        = 5
    else if (exists Cow o ( ((Z == Z0(o)) & (X >= X0(o)) & (X <= X1(o)) & (Y >= Y0(o)) & (Y <= Y1(o))) )) then
        = 10
    else if (exists Person o ( ((Z == Z0(o)) & (X >= X0(o)) & (X <= X1(o)) & (Y >= Y0(o)) & (Y <= Y1(o))) )) then
        = 15
    else if (exists Grass o (Y == Height(o))) then
        = 25
    else if (exists Road o (Y == Height(o))) then
        = 30
    else if (X == Xmin | X == Xmax | Y == Ymin | Y == Ymax | Z == Zmax) then
        = 40
};



// 2D IMAGE FORMATION FOR CAMERA  
fixed Integer xMin = 5;
fixed Integer xMax = 11; 
fixed Integer yMin = 5;
fixed Integer yMax = 11; 
fixed Integer xc  = 7;
fixed Integer yc = 7;

random Boolean Zintercept(Person o, Integer x, Integer y) {
    = ((X0(o) <= xc + Z0(o) * (xc - x)) & (X1(o) >= xc + Z0(o) * (xc - x)) & (Y0(o) <= yc + Z0(o) * (yc - y)) & (Y1(o) >= yc + Z0(o) * (yc - y)))   
};

random Boolean Zintercept(Car o, Integer x, Integer y) {
    = ((X0(o) <= xc + Z0(o) * (xc - x)) & (X1(o) >= xc + Z0(o) * (xc - x)) & (Y0(o) <= yc + Z0(o) * (yc - y)) & (Y1(o) >= yc + Z0(o) * (yc - y)))   
};

random Boolean Zintercept(Cow o, Integer x, Integer y) {
    = ((X0(o) <= xc + Z0(o) * (xc - x)) & (X1(o) >= xc + Z0(o) * (xc - x)) & (Y0(o) <= yc + Z0(o) * (yc - y)) & (Y1(o) >= yc + Z0(o) * (yc - y)))   
};


random Real Z(Integer x, Integer y) {
    if ((x <= xMax) & (x >= xMin) & (y <= yMax) & (y >= yMin)) then
        = min({Real z: z >= 0 & z < Zmax & 
	             ((exists Person o (Zintercept(o, x, y) & (Z0(o) == z))) |
		      (exists Car o (Zintercept(o, x, y) & (Z0(o) == z))) |
             	      (exists Cow o (Zintercept(o, x, y) & (Z0(o) == z))) | 
             	      ((Xmin <= xc + z * (xc - x)) & (Xmax >= xc + z * (xc - x)) & (exists Road r (Height(r) == yc + z * (yc - y)))) | 
             	      ((Xmin <= xc + z * (xc - x)) & (Xmax >= xc + z * (xc - x)) & (exists Grass g (Height(g) == yc + z * (yc - y)))) | 
             	      ((Xmin == xc + z * (xc - x)) & (Ymin <= yc + z * (yc - y)) & (Ymax >= yc + z * (yc - y))) |
             	      ((Xmax == xc + z * (xc - x)) & (Ymin <= yc + z * (yc - y)) & (Ymax >= yc + z * (yc - y))) |
             	      ((Ymin == yc + z * (yc - y)) & (Xmin <= xc + z * (xc - x)) & (Xmax >= xc + z * (xc - x))) |
             	      ((Ymax == yc + z * (yc - y)) & (Xmin <= xc + z * (xc - x)) & (Xmax >= xc + z * (xc - x))) |
             	      ((z == Zmax) & (Ymin <= yc + z * (yc - y)) & (Ymax >= yc + z * (yc - y)) & (Xmin <= xc + z * (xc - x)) & (Xmax >= xc * z * (xc - x))) ) })
    else
        = 0
};


random Integer Color2D(Integer x, Integer y){
    if ((x <= xMax) & (x >= xMin) & (y <= yMax) & (y >= yMin) & (Z(x,y) == 0)) then
        = 40
    else if ((x <= xMax) & (x >= xMin) & (y <= yMax) & (y >= yMin) & (Z(x,y) > 0)) then
        = Color3D(round(xc + Z(x,y) * (xc - x)), round(yc + Z(x,y) * (yc - y)), round(Z(x,y)))
};


// OBSERVATIONS
distinct Scene S;
//obs Scenetype(S) = 1;
obs NoOverlap() = true;
obs Color2D(7, 11) = 30;
obs Color2D(7, 8) = 5;


// QUERY
query #{Car c};
query #{Cow c};
query #{Person p};
query Color2D(8, 7);
query Color2D(8, 11);
//query {Integer i: i <= Zmax & i >= Zmin & (exists Person p (Z0(p) == i))};

query Z(11, 8);
//query {Integer z: z >= 0 & z <= 20 & z == Z(8, 7)};
//query #{Person p};
//query #{Road r};
//query {Integer i: i < 6 & i > 2 & (exists Road r (Height(r) == i))};
//query {Integer i: i >= Xmin & i <= Xmax & exists Car p (X0(p) == i)}; 
//query {Integer i: i >= Ymin & i <= Ymax & exists Car p (Y0(p) == i)}; 
//query {Integer i: i >= Zmin & i <= Zmax & exists Car p (Z0(p) == i)}; 
//query {Integer i: i >= Zmin & i <= Zmax & exists Person p (Zintercept(p, 8, 7) == i)}; 
//query {Integer i: i == Color2D(8, 7) & (i == 5 | i == 10 | i == 15 | i == 20 | i == 25 | i == 30 | i == 40)};
//query {Integer i: i == Color2D(8, 7) & (i == 10 | i == 15 | i == 20 | i == 25 | i == 30 | i == 40)};
//query {Scene s: exists Road r (s == WhichScene(r))};
//query {Integer i: i == Scenetype(S)};
//query {Integer i: i < 11 & (exists Person p (X0(p) == i))};
//query {Integer i: i < 11 & (exists Car p (X0(p) == i))};
//query {Boolean b: b == NoOverlap_person_car()};
//query {Integer z: z == Z(7, 7)};

//query {Scene s: exists Road r (s == WhichScene(r))};
//query {Integer i: i < 10 & (exists Road r (Height(r) == i))};
//query {Integer i: i < 10 & (exists Car c (Y1(c) == i))};
//query #{Car c};
//query #{Road r};
//query #{Grass g};
//query #{Person p};
