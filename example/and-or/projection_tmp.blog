type Voxel;
type Pixel;

origin Integer X(Voxel);
origin Integer Y(Voxel);
origin Integer Z(Voxel);

origin Integer x(Pixel);
origin Integer y(Pixel);


// Camera parameters
fixed Integer f = 1;

// 3-D scene parameters
fixed Integer Xmax = 10;
fixed Integer Xmin = 0;
fixed Integer Ymax = 10;
fixed Integer Ymin = 0;
fixed Integer Zmax = 10;
fixed Integer Zmin = 0;

//2-D scene parameters
fixed Integer xmax = 2;
fixed Integer xmin = 0;
fixed Integer ymax = 2;
fixed Integer ymin = 0;


#Voxel(X = X1, Y = Y1, Z = Z1) {
    if (X1 >= Xmin & X1 <= Xmax & Y1 >= Ymin & Y1 <= Ymax & Z1 >= Zmin & Z1 <= Zmax) then
        = 1
    else 
        = 0
};

#Pixel(x = x1, y = y1) {
    if (x1 >= xmin & x1 <= xmax & y1 >= ymin & y1 <= ymax) then
        = 1
    else 
        = 0
};

random Boolean Occupied3D(Voxel v) {
    = false
};

random Boolean Occupied2D(Pixel p) {
    = true
};

query #{Pixel p: x(p) == 1 & y(p) == 1};
query {Occupied2D(p) for Pixel p: x(p) == 1 & y(p) == 1};
