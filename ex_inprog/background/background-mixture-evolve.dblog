/**
 * background mixture models
 * This BLOG program describe the model for image background 
 * segmentation. 
 * See the paper:
 *   Image segmentation in video sequences: A probabilistic approach
 *   Nir Friedman, Stuart Russell, UAI 1997
 * In particular, each pixel is drawn from a mixture of road, shadow
 * vehicle components. Each component is modeled as a Gaussian 
 * distribution. 
 *
 * This version assumes a simple dynamics for the mean of each 
 * componet.
 *
 * author: leili
 */

type Component;
type Pixel;

guaranteed Component Road, Shadow, Vehicle;
random R3Vector Mean(Component, Timestep);
random R3Vector Weight(Timestep);

origin Timestep Time(Pixel);
origin NaturalNum X(Pixel);
origin NaturalNum Y(Pixel);
random R3Vector Intensity(Pixel);
random Component AssociatedComponent(Pixel);

#Pixel(X=x, Y=y, Time=t)=1;

// the prior posts uniform distribution over a box of 3D space.
Mean(c, t) {
    if t=@1 then ~ UniformVector[[0, 255, 0, 255, 0, 255]]()
    else ~ MultivarGaussian[3, [10, 0, 0; 
                                0, 10, 0; 
                                0, 0, 10]](Mean(c, Prev(t)))
}
/**
 * need to use Dirichlet distribution, however, Dirichlet is not 
 * implemented in BLOG right now. 
 * If implemented, we would use the following statement
 * Weight ~ Dirichlet[3, [0.3, 0.3, 0.3]]();
 */
Weight ~  UniformVector[[0, 1, 0, 1, 0, 1]]();

//ideally, we would hope to set this probability in the same way as
// Mean(Componnet)
AssociatedComponent(pixel) ~ TabularCPD[](Weight);

// the parameters can be set in Mean(Component)
Intensity(pixel) ~ MultivarGaussian[3, [10, 0, 0; 
                                0, 10, 0; 
                                0, 0, 10]]
                    (Mean(AssociatedComponent(pixel)))
