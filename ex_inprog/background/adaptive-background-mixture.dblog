/**
 * Adaptive background mixture models
 * This BLOG program describe the model for image background 
 * segmentation. 
 * See the paper: 
 *   Image segmentation in video sequences: A probabilistic approach
 *   Nir Friedman, Stuart Russell, UAI 1997
 * and the paper:
 *   Adaptive background mixture models for real-time tracking
 *   Chris Stauffer, W.E.L Grimson, CVPR 1999
 * In particular, each pixel is drawn from a mixture of components. 
 * Each component is modeled as a Gaussian distribution. 
 *
 * Note the model is not exactly the same as those described in the 
 * above papers.
 * This version assumes a Poisson prior for the number of components.
 *
 * author: leili, rbharath:w
 */

type Component;
type Pixel;

random R3Vector Weight(Timestep);

origin Timestep Time(Pixel);
origin NaturalNum X(Pixel);
origin NaturalNum Y(Pixel);
random R3Vector Intensity(Pixel);
random Component AssociatedComponent(Pixel);

#Component ~ Poisson(5);
#Pixel(X=x, Y=y, Time=t)=1;

// the prior posts uniform distribution over a box of 3D space.
random R3Vector Mean(Component c, Timestep t) {
	// UniformVector(x_lower, x_upper, y_lower, y_upper, z_lower, z_upper)
    if t=@1 then ~ UniformVector(0, 255, 0, 255, 0, 255)
	// MultivarGaussian(dimension, mean, covariance)
    else ~ MultivarGaussian(3, Mean(c, Prev(t)), 
                                [10, 0, 0; 
                                  0, 10, 0; 
                                  0, 0, 10])
};

/**
 * TODO: need to use Dirichlet distribution, however, Dirichlet is not 
 * implemented in BLOG right now. 
 * need implementation of Dirichlet distribution
 */
random R3Vector Weight {
	~ Dirichlet(#{Component c}, (1.0/#{Component c}))
};

//ideally, we would hope to set this probability in the same way as
// Mean(Component)
random Component AssociatedComponent(Pixel p) ~ TabularCPD[](Weight);

// the parameters can be set in Mean(Component)
random R3Vector Intensity(Pixel pixel) 
	~ MultivarGaussian(3, Mean(AssociatedComponent(pixel))
                       [10, 0, 0; 
                         0, 10, 0;  
                         0, 0, 10]);
