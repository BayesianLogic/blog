// declare logistics problem objects and actions as BLOG objects
type Box;  type Truck;  type City;

// declare the individual objects
#Box ~ Poisson(5);
//distinct Box b3, b2, b1;
distinct Truck t1, t2;
distinct City c1, c2, c3;

random Boolean applied_Load(Box b, Truck tr, Timestep t) {
  if (qstate(t)!=4 &(b == arg_load_1(t)) & (tr == arg_load_2(t)) & b!=null & tr!=null) then
    ~ Categorical({true -> 0.9, false -> 0.1})
  else
    = false
};




random Boolean applied_Unload(Box b, Truck tr, Timestep t) {
  if (qstate(t)!=4 & (b == arg_unload_1(t)) & (tr == arg_unload_2(t)) & (! exists Box b exists Truck tr true & applied_Load(b,tr,t)) & b!=null & tr!= null) then
    ~ Categorical({true -> 0.9, false -> 0.1})
  else
    = false  
};

random Boolean applied_Drive(City c, Truck tr, Timestep t) {
  if (qstate(t)!=4 &(c == arg_drive_1(t)) & (tr == arg_drive_2(t)) & (! exists Box b exists Truck tr true & applied_Load(b,tr,t)) & (! exists Box b exists Truck tr true & applied_Unload(b,tr,t)) &c!=null & tr!=null) then
    ~ Categorical({true -> 0.9, false -> 0.1})
  else
    = false
};

random City arg_drive_1(Timestep t){
  if (qstate(t) == 1) then
    = c3
  else if (qstate(t) == 3) then
    ~ UniformChoice({City c: exists Box b (BoxIn(b,c,t) & c != c3)})
  else = null
};




random Truck arg_drive_2(Timestep t){
  if (qstate(t) == 1) then
    ~ UniformChoice({Truck tr: exists Box b BoxOn(b, tr, t) & true })
  else if (qstate(t) == 3) then
    ~ UniformChoice({Truck tr})
  else = null
};

random Box arg_load_1(Timestep t){
  if (qstate(t) == 0) then
    ~ UniformChoice ({Box b: true & exists Truck tr exists City c (true & foo_load(b,c,tr,t))})
  else
    = null
};

random Truck arg_load_2(Timestep t){
  if (qstate(t) == 0) then
    ~ UniformChoice ({Truck tr: true & exists City c (true & foo_load (arg_load_1(t),c,tr,t))})
  else
    = null
};

random Box arg_unload_1(Timestep t){
  if (qstate(t) == 2) then
    ~ UniformChoice({Box b: true & foo_unload(b,t)}) 
  else
    =null
};

random Truck arg_unload_2(Timestep t){
  if (qstate(t) == 2 & arg_unload_1(t)!=null) then
    ~ UniformChoice({Truck tr: true & (BoxOn(arg_unload_1(t),tr,t))}) 
  else
    = null
};
/*
random Boolean pass(Timestep t){
  if (true) then
    = exists Timestep x ((x<=t) & BoxIn(b3, c3, x) & BoxIn(b1, c3, x) & BoxIn(b2, c3, x) )
  else
    = false
};

*/
//there was a problem here previously
random Boolean pass(Timestep t){
  if (t==@0) then
    = false
  else if (!(exists Box b (BoxIn(b, c3, t)) != true )) then
    = true
  else
    = pass(Prev(t))
};

random String actionName(Timestep t){
  if (true & exists Box b exists Truck tr (applied_Load(b,tr,t) & true)) then
    ="load"
  else if (true & exists Box b exists Truck tr (true & applied_Unload(b,tr,t))) then
    ="unload"
  else if (true & exists Truck tr exists City c (true & applied_Drive(c,tr,t))) then
    ="drive"
  else
    ="na"
};



random Real reward(Timestep t){
  if(exists Box b exists Truck tr (applied_Unload(b,tr,t) & (TruckIn(c3,tr,t) & BoxOn(b,tr,t)))) then 
    = 10.0
  else
    = 0.0
};

/*
works only if RTimes is implemented (see BuiltInFunctions.java)
*/
random Real discount(Timestep t){
  if(t==@0) then 
    = 1.0
  else
    = (discount(Prev(t)) * 0.9) /*gamma = 0.9*/
};

random Real value(Timestep t){
  if(t == @0) then
    =reward(@0)
  else
    = (value(Prev(t))) + ( reward(t) * discount(t))
};

random Boolean BoxIn(Box b, City c, Timestep t) {
  if (t == @0) then
    if (c == c1) then 
      = true
    else
      = false
  else
    = (exists Truck tr (applied_Unload(b, tr, (Prev(t))) & TruckIn (c, tr, (Prev(t)))))
      | (BoxIn(b, c, (Prev(t))) & !(exists Truck tr (true & applied_Load(b, tr, (Prev(t))))))
};


random Boolean TruckIn(City c, Truck tr, Timestep t) {
  if (t == @0) then
    if (c == c1) then 
      = true
    else
      = false
  else
    = applied_Drive(c, tr, (Prev(t)))
      | (TruckIn(c, tr, (Prev(t))) & !(exists City c2 (true & applied_Drive(c2, tr, (Prev(t))) & c2 != c)))
};

random Boolean BoxOn(Box b, Truck tr, Timestep t) {
  if (t == @0) then
    = false
  else
    = (exists City c (applied_Load(b, tr, (Prev(t))) & BoxIn(b, c, (Prev(t))) & TruckIn(c, tr, (Prev(t)))))
      | (BoxOn(b, tr, (Prev(t))) & !(true & applied_Unload(b, tr, (Prev(t)))))
};

/*
a function to get around buggy behavior of UniformChoice()
*/
random Boolean foo_load(Box b, City c, Truck tr, Timestep t){
  if true then
    = ( BoxIn ( b, c, t) & TruckIn (c, tr, t) & c!= c3)
  else
    = false
};

/*
a function to get around buggy behavior of UniformChoice()
*/
random Boolean foo_unload(Box b, Timestep t){
  if true then
    = exists Truck tr (BoxOn(b, tr,t) & TruckIn(c3,tr,t))
  else
    = false
};

random Integer qstate(Timestep t){
  if (t==@0) then
    = 0                                                                                                               // final state
  else if (qstate(Prev(t))==1) then
    = 2                                                                                                               // drop box
  else if (qstate(Prev(t))==0) then
    = 1                                                                                                               // transport box
  else if (qstate(Prev(t))==2) then
    = 3                                                                                                               // move truck
  else if (qstate(Prev(t))==3) then
    = 0    
};

/*
random Integer qstate(Timestep t){
  if (true & forall Box b (true & BoxIn(b,c3,t))) then
    = 4                                                                                                               // final state
  else if (exists Truck tr exists Box b (BoxOn(b,tr,t) & TruckIn(c3, tr, t))) then
    = 2                                                                                                               // drop box
  else if (true & exists Box b exists Truck tr (true & BoxOn(b,tr,t))) then
    = 1                                                                                                               // transport box
  else if (exists Box b exists Truck tr exists City c (BoxIn(b,c,t) & TruckIn(c,tr,t) & c!=c3) ) then
    = 0                            	    runner.moveOn();
	    out.println("obs chosen_Unload(b1, t1, @4) = true;");
	    runner.moveOn();                                                                                   // pickup box
  else
    = 3                                                                                                               // move truck
    
};
*/
/* 
 * 
 * 
 * 
 * 
 * q(0) -> q(1) 
 * q(1) -> q(2)
 * q(2) -> q(3)
 * 
 * 
 */
//obs pass (@20) = true;
obs {Box b : BoxIn(b, c1, @0) == true} = {b1, b2, b3};
query value(@2);
query value(@3);
query value(@4);
query value(@5);
query value(@6);
query actionName(@2);
query actionName(@3);
query actionName(@4);
query actionName(@5);
query actionName(@6);

