type Voxel;
type Pixel;

origin NaturalNum X(Voxel);
origin NaturalNum Y(Voxel);
origin NaturalNum Z(Voxel);

origin NaturalNum x(Pixel);
origin NaturalNum y(Pixel);

random Boolean Occupied3D(Voxel);
random Boolean Occupied2D(Pixel);


// Camera parameters
nonrandom NaturalNum f = 1;

// 3-D scene parameters
nonrandom NaturalNum Xmax = 10;
nonrandom NaturalNum Xmin = 0;
nonrandom NaturalNum Ymax = 10;
nonrandom NaturalNum Ymin = 0;
nonrandom NaturalNum Zmax = 10;
nonrandom NaturalNum Zmin = 0;

//2-D scene parameters
nonrandom NaturalNum xmax = 2;
nonrandom NaturalNum xmin = 0;
nonrandom NaturalNum ymax = 2;
nonrandom NaturalNum ymin = 0;


#Voxel(X=X1,Y=Y1,Z=Z1){
    if (X1>=Xmin & X1<=Xmax & Y1>=Ymin & Y1<=Ymax & Z1>=Zmin & Z1<=Zmax) then
        = 1
    else 
        =0
};

#Pixel(x=x1,y=y1){
    if (x1>=xmin & x1<=xmax & y1>=ymin & y1<=ymax) then
        = 1
    else 
        =0
};

Occupied3D(v){
    = false
};

Occupied2D(p){
    = true
};

query #{Pixel p: x(p)=1 & y(p)=1};
query {Occupied2D(p) for Pixel p: x(p)=1 & y(p)=1};
