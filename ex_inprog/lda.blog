/** Latent Dirichlet Allocation (LDA) represented in blog model.
 * (Blei, Ng and Jordan, 2003)
 * 
 * @author: leili  
 * @author: rbharath
 */

type Document;

#Document ~ Poisson(2);

// Suppose we have five topics. 
//fixed NaturalNum k = 5;
fixed Real alpha = 1.0;
fixed Real[][] beta =
    [[0.1, 0.4, 0.5],
     [0.1, 0.3, 0.6],
     [0.4, 0.2, 0.4],
     [0.6, 0.3, 0.1],
     [0.1, 0.8, 0.1]];

random NaturalNum doclen(Document d) ~ UniformInt(5, 10);

random Real[] theta(Document d) ~ Dirichlet(0.2, 0.2, 0.2, 0.2, 0.2);

random NaturalNum topic(Document d, NaturalNum i) {
    if (i < doclen(d)) then ~ Categorical(theta(d))
};

random NaturalNum wordidx(Document d, NaturalNum i) {
    ~ Categorical(beta[topic(d)])
};

/* Lots of undefined stuff here; ignoring for now
// define a dictionary mapping from index to word
fixed String Dictionary(NaturalNum);

random String word(Document d, NaturalNum i) {
    = Dictionary( wordidx(d, i) );
}
*/
