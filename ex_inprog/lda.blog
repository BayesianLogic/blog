/** Latent Dirichlet Allocation (LDA) represented in blog model.
 * (Blei, Ng and Jordan, 2003)
 * 
 * @author: leili  
 * @author: rbharath
 */

type Document;

#Document ~ Poisson(1000);

// Suppose we have five topics. 
fixed NaturalNum k = 5;
fixed Real alpha = 1.0;
fixed Real[][] beta(NaturalNum) =
    [[0.1, 0.4, 0.5],
     [0.1, 0.3, 0.6],
     [0.4, 0.2, 0.4],
     [0.6, 0.3, 0.1],
     [0.1, 0.8, 0.1]]

random Real[] theta(Document d) ~ Dirichlet(k, alpha);

random NaturalNum topic(Document d) {
    ~ Categorical(theta(d))
};

random NaturalNum wordidx(Document d, NaturalNum i) {
    ~ Categorical(beta(topic(d)))
};

/* Lots of undefined stuff here; ignoring for now
// define a dictionary mapping from index to word
fixed String Dictionary(NaturalNum);

random String word(Document d, NaturalNum i) {
    = Dictionary( wordidx(d, i) );
}
*/
